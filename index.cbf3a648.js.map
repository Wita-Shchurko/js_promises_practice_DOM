{"mappings":"ACEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACW,IAAA,EAAT,WACE,OAAO,EAAQ,8BACjB,EAEA,SAAS,gBAAgB,CAAC,QAAS,WAAM,OAAA,G,GACzC,SAAS,gBAAgB,CAAC,cAAe,WAAM,OAAA,G,EACjD,GAEM,EAAmB,IAAI,QAAQ,SAAA,CAArC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,OAAO,GACT,EACF,GAEM,EAAoB,IAAI,QAAQ,SAAA,CAAtC,EACE,SAAS,gBAAgB,CAAC,cAAe,WACvC,OAAO,GACT,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,EAAQ,6BACV,GAEM,EAAiB,SAAC,CAAxB,EACE,SAAS,IAAI,CAAC,kBAAkB,CAC9B,YACC,+CAAsD,MAAA,CAAR,EAAQ,UAE3D,EAEM,EAAe,SAAC,CAAtB,EACE,SAAS,IAAI,CAAC,kBAAkB,CAC9B,YACA,6CAA2D,MAAA,CAAd,EAAM,OAAO,CAAC,UAE/D,EAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAe,EACjB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAa,EACf,GAEF,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAe,EACjB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAa,EACf,GAEF,QAAQ,GAAG,CAAC,CAAC,EAAkB,EAAkB,EAC9C,IAAI,CAAC,SAAC,CADwC,EAC7B,OAAA,CACjB,GAAA,IAAI,CAAC,SAAC,CAAN,EACC,EAAe,EACjB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAa,EACf","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promise1 = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar promise2 = new Promise(function(resolve) {\n    var onClick = function onClick() {\n        return resolve(\"Second promise was resolved\");\n    };\n    document.addEventListener(\"click\", function() {\n        return onClick();\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        return onClick();\n    });\n});\nvar promiseLeftClick = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        return resolve();\n    });\n});\nvar promiseRightClick = new Promise(function(resolve) {\n    document.addEventListener(\"contextmenu\", function() {\n        return resolve();\n    });\n});\nvar promise3 = new Promise(function(resolve) {\n    resolve(\"Third promise was resolved\");\n});\nvar successHandler = function(message) {\n    document.body.insertAdjacentHTML(\"beforeend\", '<div class=\"success\" data-qa=\"notification\">'.concat(message, \"</div>\"));\n};\nvar errorHandler = function(error) {\n    document.body.insertAdjacentHTML(\"beforeend\", '<div class=\"error\" data-qa=\"notification\">'.concat(error.message, \"</div>\"));\n};\npromise1.then(function(message) {\n    successHandler(message);\n}).catch(function(error) {\n    errorHandler(error);\n});\npromise2.then(function(message) {\n    successHandler(message);\n}).catch(function(error) {\n    errorHandler(error);\n});\nPromise.all([\n    promiseLeftClick,\n    promiseRightClick\n]).then(function(result) {\n    return promise3;\n}).then(function(message) {\n    successHandler(message);\n}).catch(function(error) {\n    errorHandler(error);\n});\n\n//# sourceMappingURL=index.cbf3a648.js.map\n","'use strict';\n\nconst promise1 = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst promise2 = new Promise((resolve) => {\n  function onClick() {\n    return resolve('Second promise was resolved');\n  };\n\n  document.addEventListener('click', () => onClick());\n  document.addEventListener('contextmenu', () => onClick());\n});\n\nconst promiseLeftClick = new Promise(resolve => {\n  document.addEventListener('click', () => {\n    return resolve();\n  });\n});\n\nconst promiseRightClick = new Promise(resolve => {\n  document.addEventListener('contextmenu', () => {\n    return resolve();\n  });\n});\n\nconst promise3 = new Promise((resolve) => {\n  resolve('Third promise was resolved');\n});\n\nconst successHandler = (message) => {\n  document.body.insertAdjacentHTML(\n    'beforeend',\n    `<div class=\"success\" data-qa=\"notification\">${message}</div>`,\n  );\n};\n\nconst errorHandler = (error) => {\n  document.body.insertAdjacentHTML(\n    'beforeend',\n    `<div class=\"error\" data-qa=\"notification\">${error.message}</div>`,\n  );\n};\n\npromise1\n  .then((message) => {\n    successHandler(message);\n  })\n  .catch((error) => {\n    errorHandler(error);\n  });\n\npromise2\n  .then((message) => {\n    successHandler(message);\n  })\n  .catch((error) => {\n    errorHandler(error);\n  });\n\nPromise.all([promiseLeftClick, promiseRightClick])\n  .then((result) => promise3)\n  .then((message) => {\n    successHandler(message);\n  })\n  .catch((error) => {\n    errorHandler(error);\n  });\n"],"names":["promise1","Promise","resolve","reject","document","addEventListener","setTimeout","Error","promise2","onClick","promiseLeftClick","promiseRightClick","promise3","successHandler","message","body","insertAdjacentHTML","concat","errorHandler","error","then","catch","all","result"],"version":3,"file":"index.cbf3a648.js.map"}